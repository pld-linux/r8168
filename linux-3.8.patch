--- r8168-8.035.00/src/r8168_n.c.orig	2012-12-19 11:38:56.000000000 +0100
+++ r8168-8.035.00/src/r8168_n.c	2013-06-04 13:10:37.691818331 +0200
@@ -14541,7 +14541,11 @@
 	spin_unlock_irqrestore(&tp->phy_lock, flags);
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static int __devinit
+#else
+static int
+#endif
 rtl8168_init_board(struct pci_dev *pdev,
 		   struct net_device **dev_out,
 		   void __iomem **ioaddr_out)
@@ -14711,7 +14711,11 @@
 	goto out;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static void __devinit
+#else
+static void
+#endif
 rtl8168_init_sequence(struct rtl8168_private *tp)
 {
 	void __iomem *ioaddr = tp->mmio_addr;
@@ -14964,7 +14964,11 @@
 };
 #endif
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static int __devinit
+#else
+static int
+#endif
 rtl8168_init_one(struct pci_dev *pdev,
 		 const struct pci_device_id *ent)
 {
@@ -15128,7 +15128,11 @@
 	return 0;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 static void __devexit
+#else
+static void
+#endif
 rtl8168_remove_one(struct pci_dev *pdev)
 {
 	struct net_device *dev = pci_get_drvdata(pdev);
@@ -17649,7 +17649,11 @@
 	.name		= MODULENAME,
 	.id_table	= rtl8168_pci_tbl,
 	.probe		= rtl8168_init_one,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,8,0)
 	.remove		= __devexit_p(rtl8168_remove_one),
+#else
+	.remove		= rtl8168_remove_one,
+#endif
 #if LINUX_VERSION_CODE > KERNEL_VERSION(2,6,11)
 	.shutdown	= rtl8168_shutdown,
 #endif
